name: Release
on:
  push:
    branches:
      - master

jobs:
  release:
    name: Release
    permissions:
      contents: write
      issues: write
      pull-requests: write

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.0.3
        with:
          node-version: "lts/*"

      - name: Install dependencies
        run: npm ci

      - name: Dry run to get the next release version
        id: tag_version
        run: |
          export NEXT_TAG_VERSION=$(npx semantic-release --dry-run | grep 'The next release version is' | sed -E 's/.* ([[:digit:].]+)$/\1/')
          echo "new_tag_version=${NEXT_TAG_VERSION}"        
          echo "new_tag_version=${NEXT_TAG_VERSION}" >> $GITHUB_ENV        
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release with next Semantic Version
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_COMMITTER_NAME: "Arc-E-Tect"
          GIT_COMMITTER_EMAIL: "sedr@arc-e-tect.com"
          GIT_AUTHOR_NAME: "Arc-E-Tect"
          GIT_AUTHOR_EMAIL: "sedr@arc-e-tect.com"

#  update-release:
#    needs: Release
##    if: ${{ needs.release.outputs.new_tag_version != '' }}
#    runs-on: ubuntu-latest
#    steps:
      - name: Update version and date in file
        run: |
          # Get the version from the output of the Semantic Release step
          echo ${NEXT_TAG_VERSION}
          VERSION=${{ NEXT_TAG_VERSION }}
          
          # Get the current date
          DATE=$(date +%Y-%m-%d)
          
          # File where the version and date need to be updated
          FILE="test.adoc"
          
          # Regular expression to match the string to be replaced
          REGEX="v[0-9]\+\.[0-9]\+\.[0-9]\+\, [0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}"
          
          # Replace the string in file
          sed -i "s/$REGEX/v$VERSION, $DATE/g" $FILE

      - name: Commit and push changes
        run: |
          git config --local user.email "sedr@arc-e-tect.com"
          git config --local user.name "Arc-E-Tect"
          git commit -am "Update version and date in file [skip-ci]"
          git push